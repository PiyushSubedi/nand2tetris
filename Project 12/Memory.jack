// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * This library provides two services: direct access to the computer's main
 * memory (RAM), and allocation and recycling of memory blocks. The Hack RAM
 * consists of 32,768 words, each holding a 16-bit binary number.
 */ 
class Memory {

    /** entire memory */
    static Array memory;

    /** Initializes the class. */
    function void init() {
        let memory = 0;

        let memory[2048] = 14334;   // available free space
        let memory[2049] = 2050;    // next

        return;
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
        return memory[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
        let memory[address] = value;
        return;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
        var Array heapBase;

        if(size < 1) {
            do Sys.error(5);
        }

        let heapBase = 2048;

        // find next available space
        while(heapBase[0] < size) {
            let heapBase = heapBase[1];
        }

        if(heapBase + size > 16379) {   // out of heap space
            do Sys.error(6);
        }

        if(heapBase[0] > (size + 2)) {
            let heapBase[size + 2] = heapBase[0] - size - 2;
            if(heapBase[1] = (heapBase + 2)) {
                let heapBase[size + 3] = heapBase + size + 4;
            } else {
                let heapBase[size + 3] = heapBase[1];
            }

            let heapBase[1] = heapBase + size + 2;
        }

        let heapBase[0] = 0;    // mark as used
        return heapBase + 2;
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
        var Array node;
        var Array next;

        let node = o - 2;
        let next = node[1];

        if(next[0] = 0) {
            let node[0] = node[1] - node - 2;
        } else {
            let node[0] = node[1] - node + next[0];
            if(next[1] = (next + 2)) {
                let node[1] = node + 2;
            } else {
                let node[1] = next[1];
            }
        }

        return;
    }
}
