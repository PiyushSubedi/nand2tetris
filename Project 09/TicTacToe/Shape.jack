


class Shape {

    field char value;   // unique identifier for the Shape

    field char type;    // 'c' for circle, 'r' for cross


    /**
     *  Constructs a Shape of the given type and value
    */
    constructor Shape new(char val, char typ) {
        let value = val;
        let type = typ;
        return this;
    }

    /**
     *  Method returns the value of the Shape
    */
    method char getValue() {
        return value;
    }

    /**
     *  Method returns the shape type
    */
    method char getType() {
        return type;
    }


    /**
     *  Function returns a new Shape of value '1' and type Circle
    */
    function Shape getCircle() {
        var Shape shape;
        let shape = Shape.new("1", 79); // 79 = O
        return shape;
    }

    /**
     *  Function returns a new Shape of value '2' and type Cross
    */
    function Shape getCross() {
        var Shape shape;
        let shape = Shape.new("2", 88); // 88 = X
        return shape;
    }

    /**
     *  Disposes all disposable entities
    */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

}