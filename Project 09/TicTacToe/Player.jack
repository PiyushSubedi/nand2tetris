/**
 *  Class holds an instance of player containing player info
*/

class Player {

    field String name;  // Name of the player

    field Shape shape;  // Shape associated with the player (Circle or Cross)

    constructor Player new(String nm, Shape shp) {
        let name = nm;
        let shape = shp;

        return this;
    }

    /**
     *  Method returns the name of the player
    */
    method String getName() {
        return name;
    }

    /**
     *  Method returns the Shape object associated with the player
    */
    method Shape getShape() {
        return shape;
    }


    /**
     *  Function returns a new player assigning it a unique Shape
    */
    function Player getPlayer1(String name) {
        var Player player;
        var Shape shape;
        let shape = Shape.getCircle();
        let player = Player.new(name, shape);
        return player;
    }


    /**
     *  Function returns a new player assigning it a unique Shape
    */
    function Player getPlayer2(String name) {
        var Player player;
        var Shape shape;
        let shape = Shape.getCross();
        let player = Player.new(name, shape);
        return player;
    }

    /**
     *  Disposes disposable entities
    */
    method void dispose() {
        do name.dispose();
        do shape.dispose();
        do Memory.deAlloc(this);
        return;
    }

}